apply plugin: 'com.android.application'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {

    compileSdkVersion 33

    defaultConfig {
        applicationId 'com.wit.witsp32'
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 18
        versionName "2.1.2 - ${getGitHash()}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "proof_of_possesion", "abcd1234"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "true"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }

        debug {
            debuggable true
            resValue "string", "proof_of_possesion", "abcd1234"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "true"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }
    }

    compileOptions {
        // Support for Java 8 features
       // coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    namespace 'com.espressif.wifi_provisioning'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'
    implementation 'com.google.crypto.tink:tink-android:1.6.1'
    implementation project(path: ':provisioning')

    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.2'
    implementation 'com.github.firdausmaulan:AVLoadingIndicatorView:2.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'



    //firebase
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.9.2'
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-database:20.0.2'
    implementation 'com.google.firebase:firebase-analytics:19.0.2'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'

    //alert
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    //dagger
    implementation 'com.google.dagger:dagger:2.45'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.45'



    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.airbnb.android:lottie:6.0.1'
    // glide image library
    implementation 'com.github.bumptech.glide:glide:4.3.1'


}
apply plugin: 'com.google.gms.google-services'